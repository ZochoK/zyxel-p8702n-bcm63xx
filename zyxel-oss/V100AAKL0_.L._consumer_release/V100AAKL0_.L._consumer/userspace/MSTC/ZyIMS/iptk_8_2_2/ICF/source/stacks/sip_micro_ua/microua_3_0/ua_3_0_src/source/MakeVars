##############################################################################
# This is the global include file that is included from all the Makefiles in 
# each Sub-directory 
##############################################################################
#
#	SDF_LINUX	 			-If compiled in LINUX, this must be defined
#	SDF_CALLFLOW			-Enable call flow display using ctascii utility
#	SDF_TRACE				-Enable trace log support for the UA Toolkit.
#	SDF_DEBUG				-Enable debug log support for the UA Toolkit.
#	SDF_ERROR				-Enable error log support for the UA Toolkit.
#	SDF_STATISTICS			-Enable statictics support for the UA Toolkit.
#	SDF_PARAMVALIDATION		-Enable validation checks for passed parameters
#							 in all APIs
#	SDF_USE_INTERNALTHREADS	-Start a thread to handle remote retransmission 
#							 expiries
#	SDF_THREAD_SAFE			-Enable thread safety in the UA toolkit.
#	SDF_TXN					-Enable the Stack Transaction Layer support UA.
#	SDF_TEL					-Enable the Tel URL support for the UA Toolkit.
#	SDF_USE_PREALLOCBUFFERS	-Enable to optimize UATK's performance by
#							 avoiding buffer copies while forming and 
#							 sending messages.
#	SDF_SESSION_TIMER		-Enable Session Timer support for the UA Toolkit.
#	SDF_HA					-Enable High Availability Suport for the 
#							 UA Toolkit.
#	SDF_APP_CONTROLLED_REMOTE_RETX	-This flag is valid only when SDF_TXN is 
#									not selected.  UATK allows the application
#									to have its own remote retransmission logic.
#   SDF_IPV6				-Enables the support for IPV6 addresses.
#   SDF_APPCONTROLLEDMEMPOOL	-Allows the application to have its own
#								 mempool organisation.
#	SDF_QOS					- Enables the QOS support
#	SDF_MEDIAGROUP			- Enables the Media Grouping support.
#	SDF_SESSIONCHANGE		- Enables the Session Change feature during media
#							  negotiation
#	SDF_IM					- Enables the Instant Messaging support
#	SDF_TLS					- Enables the TLS Support in UATK
#	SDF_REFER				- Enables the REFER draft support in UATK
#	SDF_SERVICE				- Service layer functionality is enabled in UATK.
#								To flag will coexist with SDF_REFER.
##############################################################################
ICF_SRC_DIR=$(ICF_DEV_DIR)/source

ADIGEST_DEV_DIR=$(ICF_DEV_DIR)/source/icf_util/Utility1/aDigest
ICF_STACK_DIR=$(ICF_DEV_DIR)/source/stacks/sip_micro_ua/microua_3_0
include $(ICF_DEV_DIR)/build/linux/makefile.mk
include $(ICF_STACK_DIR)/MakeVars

PURIFY=purify -best-effort -inuse_at_exit=yes -cache-dir=/home/sipuser1/purifycache -threads=yes -use-internal-locks=yes -max_threads=40 -chain-length="30" -mt_safe_malloc=yes
PURIFY=

LIB=-L../lib/ -L../../../$(STACK_DIR)/source/lib

INCLUDES=-Ih/ \
		-I$(ICF_STACK_DIR)/ua_3_0_src/source/UAlib/h \
		-I$(ICF_STACK_DIR)/sip_stack_3_0_src/source/siplib/common/h \
		-I$(ICF_STACK_DIR)/sip_stack_3_0_src/source/siplib/accessor/h \
		-I$(ICF_STACK_DIR)/sip_stack_3_0_src/source/siplib/parser/h \
		-I$(ICF_STACK_DIR)/sip_stack_3_0_src/source/siplib/txn/h \
		-I$(ICF_STACK_DIR)/sip_stack_3_0_src/source/siplib/clone/h \
		-I$(ADIGEST_DEV_DIR)/../Common/h \
		-I$(ADIGEST_DEV_DIR)/ext_if



LDFLAGS= -lua -luaport -lmicrosipaccessor -lpthread -lmicrosipclone -lmicrosipcore -lmicrosipport 

# UATK Libs required for dependency in hssUA/SUPEr/simUA/SuperLite
UA_LIBS= ../lib/libuaport.a ../lib/libua.so ../lib/libmicrosipaccessor.so ../lib/libmicrosipclone.so ../lib/libmicrosipcore.so ../../../sip_stack_3_0_src/source/lib/libmicrosipport.a

#
# This point onwards is generated
#

# Stack extensions
STACK_EXTENSIONS= -DICF_STACK_PORT -D_GNU_SOURCE -DSIP_3GPP -DSIP_CONGEST -DSIP_PRES -USIP_THREAD_SAFE -USIP_LOCKEDREFCOUNT -DSIP_BADMESSAGE_PARSING -DANSI_PROTO -DSIP_LINUX -D_REENTRANT -DSIP_BY_REFERENCE -DSIP_TXN_LAYER -DSIP_RPR -DSIP_NO_CALLBACK -DSIP_IMPP -DSIP_TEL  -DSIP_SESSIONTIMER  -DSIP_CLONE -DSIP_ACC -DSIP_TRACE -DSIP_OVERRIDE_SNPRINTF -DSIP_REFER  -DSIP_REPLACES -DSIP_RETRANSCALLBACK  -DSIP_AUTHENTICATE  -DSIP_MIME_PARSING  -DSIP_ISUP  -DSIP_SIPMSGBODY  -DSIP_IMURL  -DSIP_CORE_STACK_COMPATIBLE -DSIP_TIMESTAMP -DSIP_DATE -DSIP_WARNING -DSIP_MSGBUFFER_CHECK -Wall -Wimplicit -Wmissing-prototypes                  -Wcomment -Waggregate-return                 -Wmissing-declarations -Wreturn-type                 -Wparentheses -Wpointer-arith                 -fno-builtin -fno-inline-functions                 -fsigned-char -pipe -Wstrict-prototypes                 -Wno-format -W -fcond-mismatch -Wnested-externs                 -Wswitch

# Compiler to use
#CC=gcc -g
#PURIFYCC=${PURIFY} ${CC}
PURIFYCC = $(CC_CMN)
#ZyXEL porting
#CC = $(CC_CMN)
#ZyXEL porting end

# Archiver to use
#AR=ar -r
AR=$(ICF_AR) $(ICF_AR_FLAGS)    

# UA CFLAGS for compilation
#IPTK_SUPPORT_TLS
ifeq ($(IPTK_SUPPORT_TLS), yes)
CFLAGS+= -DICF_UATK_PORT -DARDNSCL_PORT_LINUX -DSDF_3GPP -DSDF_CONGEST -DSDF_PRES -USDF_THREAD_SAFE -DSDF_LOOKUP -DSDF_TLS -DSDF_LINUX -DMICROUA -DSDF_TXN -DSDF_REFER -USDF_SERVICE -DSDF_TEL -DSDF_SESSION_TIMER -DSDF_TRACE -DSDF_ERROR -DSDF_PARAMVALIDATION -DSDF_QOS -DSDF_IM -DSDF_NETWORKCALLBACKS -DSDF_AUTHENTICATE ${STACK_EXTENSIONS}
else
CFLAGS+= -DICF_UATK_PORT -DARDNSCL_PORT_LINUX -DSDF_3GPP -DSDF_CONGEST -DSDF_PRES -USDF_THREAD_SAFE -DSDF_LOOKUP -USDF_TLS -DSDF_LINUX -DMICROUA -DSDF_TXN -DSDF_REFER -USDF_SERVICE -DSDF_TEL -DSDF_SESSION_TIMER -DSDF_TRACE -DSDF_ERROR -DSDF_PARAMVALIDATION -DSDF_QOS -DSDF_IM -DSDF_NETWORKCALLBACKS -DSDF_AUTHENTICATE ${STACK_EXTENSIONS}
endif
